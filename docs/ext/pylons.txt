:mod:`formalchemy.ext.pylons` -- Pylons extensions
==================================================

.. automodule:: formalchemy.ext.pylons

Administration interface
------------------------

Generate a controller in your application::

  $ paster controller admin

Edit your `controllers/admin.py`, replacing `yourapp` with your application name::

  import logging

  from yourapp.lib.base import *
  from yourapp import model
  from yourapp.model.meta import Session
  from formalchemy.ext.pylons.admin import FormAlchemyAdminController

  log = logging.getLogger(__name__)

  class AdminController(BaseController):
      model = model # where your SQLAlchemy mappers are
      forms = None # module containing FormAlchemy fieldsets definitions
      Session = Session # Session factory

  AdminController = FormAlchemyAdminController(AdminController)

Add these lines in `config/routing.py`::

  from formalchemy.ext.pylons import maps
  from yourapp.controllers.admin import AdminController
  ...

  def make_map():
      """Create, configure and return the routes Mapper"""
      ...

      # CUSTOM ROUTES HERE
      maps.admin_map(map, AdminController, 'admin')

      ...

Now you can go to the `/admin/` url.

To customize the forms used, create a module `yourapp.forms` and specify that
as the forms module in AdminController.  In this module, create 
:class:`~formalchemy.forms.FieldSet` (for create and edit forms)
and :class:`~formalchemy.tables.Grid` (for object lists) 
instances for the models you wish to customize.  (The `Grid`s will
automatically get edit and delete links added, and be made readonly.)

See http://docs.formalchemy.org/forms.html for details on form customization.

